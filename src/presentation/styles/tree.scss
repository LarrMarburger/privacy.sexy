// Overrides base styling for LiquorTree
@import "@/presentation/styles/colors.scss";

$color-tree-bg                              : $color-primary-darker;
$color-node-arrow                           : $color-on-primary;
$color-node-fg                              : $color-on-primary;
$color-node-hover-bg                        : $color-primary-dark;
$color-node-keyboard-bg                     : $color-surface;
$color-node-keyboard-fg                     : $color-on-surface;
$color-node-checkbox-checked-bg             : $color-secondary;
$color-node-checkbox-checked-border         : $color-secondary;
$color-node-checkbox-checked-checked-tick   : $color-on-secondary;
$color-node-checkbox-unchecked-bg           : $color-primary-darkest;
$color-node-checkbox-unchecked-border       : $color-on-primary;

.tree {
    background: $color-tree-bg;
    &-node { 
        white-space: normal !important;
        > .tree-content {
            > .tree-anchor > span {
                color: $color-node-fg;
                text-transform: uppercase;
                font-size: 1.5em;
            }
            &:hover {
                background: $color-node-hover-bg !important;
            }
        }
        &.selected { // When using keyboard navigation it highlights current item and its child items
            background: $color-node-keyboard-bg;
            .tree-text {
                color: $color-node-keyboard-fg !important; //  $block
            }
        }
    }
    &-checkbox {
        border-color: $color-node-checkbox-unchecked-border !important;
        &.checked {
            background: $color-node-checkbox-checked-bg !important;
            border-color: $color-node-checkbox-checked-border !important;
            &:after {
                border-color: $color-node-checkbox-checked-checked-tick !important;
            }
        }
        &.indeterminate {
            border-color: $color-node-checkbox-unchecked-border !important;
        }
        background: $color-node-checkbox-unchecked-bg !important;
    }
    &-arrow {
        &.has-child {
            &.rtl:after, &:after {
                border-color: $color-node-arrow !important;
            }
        }
    }
}
